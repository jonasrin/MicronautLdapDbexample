plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
}



version "0.1"
group "dk.frontit.learning"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    //security
    implementation "io.micronaut:micronaut-security-jwt"
    implementation "io.micronaut.configuration:micronaut-security-ldap"
    implementation "org.springframework.security:spring-security-crypto:${springSecurityCryptoVersion}"
    //db
    implementation "io.micronaut.configuration:micronaut-hibernate-validator"
//    implementation "io.micronaut.configuration:micronaut-hibernate-jpa"
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation "io.micronaut.configuration:micronaut-jdbc-hikari"
    testImplementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'
//    annotationProcessor "io.micronaut.data:micronaut-data-processor"
    annotationProcessor("io.micronaut.data:micronaut-data-processor:1.1.1")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa:1.1.1")
    runtime "com.h2database:h2"
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
}

test.classpath += configurations.developmentOnly

mainClassName = "dk.frontit.learning.Application"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}


shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}

